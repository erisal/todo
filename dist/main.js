(()=>{const e=(e,t="",s="",d=1,a="open")=>{const n=[];return{getTitle:()=>e,setTitle:t=>e=t,getDescription:()=>t,setDescription:e=>t=e,getDue:()=>s,setDue:e=>s=e,getPriority:()=>d,setPriority:e=>d=e,getStatus:()=>a,toggleStatus:()=>{"open"===a&&(a="closed"),"closed"===a&&(a="open")},getTask:()=>({title:e,description:t,due:s,priority:d,status:a}),addNote:e=>{n.unshift(e)},deleteNote:e=>{n.splice(e,1)}}},t=(e,t)=>{const s=[];return{getTitle:()=>e,setTitle:t=>e=t,getDescription:()=>t,setDescription:e=>t=e,addTask:e=>{s.push(e)},deleteTask:e=>s.splice(e,1),getTasks:()=>s}},s=(()=>{const e=document.querySelector("#content");return{renderTasks:t=>{t.getTasks().forEach((t=>{(t=>{let s=document.createElement("div");s.classList.add("taskContainer");let d=document.createElement("div");d.classList.add("taskHead");let a=document.createElement("div");a.classList.add("taskTitle");let n=document.createElement("h2");n.textContent=t.getTitle();let i=document.createElement("div");i.classList.add("dueDate");let o=document.createElement("h3");o.textContent=t.getDue();let c=document.createElement("div");c.classList.add("taskFunctions");let l=document.createElement("div");l.classList.add("taskBody");let r=document.createElement("div");r.classList.add("taskDescription");let p=document.createElement("h4");p.textContent=t.getDescription(),a.appendChild(n),i.appendChild(o),d.appendChild(a),d.appendChild(i),d.appendChild(c),r.appendChild(p),l.appendChild(r),s.appendChild(d),s.appendChild(l),e.appendChild(s)})(t)}))}}})(),d=e("Task 1","Description for task 1","2-5-2020",2,"open"),a=e("Task 2","Second Description","2-5-2020",1,"closed"),n=e("Task 3","Third Description of task","2-5-2020",4,"open"),i=t("General","First project with tasks"),o=t("Second Project","Description here");i.addTask(d),i.addTask(a),i.addTask(n),o.addTask(n),o.addTask(a),o.addTask(d),console.log(i.getTasks()),console.table(i.getTasks()[0].getTask()),s.renderTasks(i)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,